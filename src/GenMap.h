#ifndef GENMAP_H
#define GENMAP_H

#include "Map.h"

// Silly way to generate maps. Loading from a file would be ideal.
inline Map* createTestMap() {
    Map* map = Map_Create(15, 15);
    int tileI = 0;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 0;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 128;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 1;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 2;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 129;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 130;
    map->tiles[tileI++] = 130;
    return map;
}    

#endif